# This is a basic workflow to help you get started with Actions

name: BuildServer

# Controls when the workflow will run
on:
  env:
    FOLDER_ROOT: "Pushを感知させたいフォルダーがここに"
    REPO_NAME: "レポ名がここに（dev_kobetsubaなど）"
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    paths:
      - '${FOLDER_ROOT}/**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
        - 32574:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
        with:
          path: $REPO_NAME
      - name: Verify MySQL connection from host
        run: |
          sudo apt-get install -y mysql-client;
          sudo service mysql restart;
          mysql -u root --password="root" -e "SET GLOBAL sql_mode = 'NO_ENGINE_SUBSTITUTION';"
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysql, pdo_mysql, bcmath, soap, intl, gd, exif, iconv, imagick
      - name: DB Repo Clone
        uses: actions/checkout@v2
        with:
          repository: StoryEdutech/kobetsuba_database_backup
          token: ${{ secrets.DB_TOKEN }}
          path: kobetsuba_database_backup
      - name: setup db users
        run: mysql -u root --password="root"< kobetsuba_database_backup/zero.sql
      - name: Validate composer.json and composer.lock
        run: composer validate -d $REPO_NAME/  --no-check-publish
      - name: Install dependencies
        run: composer update -d $REPO_NAME/ && composer install -d $REPO_NAME/ --prefer-dist --no-progress --no-suggest
        #使用するテーブルの読み込み。
#       - name: setup account table
#         run: sh $REPO_NAME/sync_db_util.sh -p root -f account
#       - name: setup course tables
#         run: sh $REPO_NAME/sync_db_util.sh -p root -f course
#       - name: setup freemium table
#         run: sh $REPO_NAME/sync_db_util.sh -p root -m course/up/freemium            
      - name: Run test suite
        run: composer run-script -d $REPO_NAME/ test $FOLDER_ROOT
